# File Skeleton

snippet vsetup "vue RFC script setup" b
<template>
  <div></div>
</template>

<script setup name="${0}" lang="ts">
import { ref, defineProps, defineEmit } from "vue"
</script>
endsnippet

snippet vbase "vue skeleton" b
<template>
  <div></div>
</template>

<script lang="ts">
import { defineComponent } from "vue"

export default defineComponent({
  name: "`!p snip.rv = snip.basename`",
  props: {},
  components: {},
  setup() {
    return {}
  },
})
</script>

<style scoped lang="postcss">
/* Style */
</style>
endsnippet

# Conditional Flow

snippet vfor "v-for" b
<div v-for="(${0:item}, i) in ${1:items}" :key="i">
</div>
endsnippet

snippet vif "v-if" b
<div v-if="${1}">
</div>
endsnippet

snippet velse "v-else" b
<div v-else>
</div>
endsnippet

# Slots

snippet slot "slot" b
<slot name="${0:default}" />
endsnippet

snippet tslot "template slot" b
<template v-slot:${0}>
</template>
endsnippet

# Components

snippet fa "font awesome vite-icon" b
<i-fa-solid-${0:search} class="h-5" />
endsnippet

snippet suspense "suspense tags" b
<Suspense>
  <template #default>
    <div />
  </template>
  <template #fallback>
    <div />
  </template>
</Suspense>
endsnippet

# Imports

snippet "import vue" "import vue" b
import { defineComponent, ref, computed } from "vue"
endsnippet

snippet "import store" "import store" b
import { ${0:useMainStore} } from "@/store"
endsnippet
