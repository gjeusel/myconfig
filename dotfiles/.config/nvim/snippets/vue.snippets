# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt


snippet vbase
<template>
	<div></div>
</template>

<script lang="ts">
import { defineComponent } from "vue";

export default defineComponent({
	name: "`!p snip.rv = snip.basename`",
	props: {},
	components: {},
	setup() {
		return {};
	},
});
</script>

<style scoped lang="postcss">
/* Style */
</style>
endsnippet

snippet vfor
<div v-for="(${0:item}, i) in ${1:items}" :key="i">
</div>
endsnippet

snippet vif
<div v-if="${1}">
</div>
endsnippet

snippet velse
<div v-else>
</div>
endsnippet

snippet slot
<slot name="${0:default}" />
endsnippet

snippet tslot
<template v-slot:${0}>
</template>
endsnippet

snippet fa
<fa class="h-5" icon="${0:search}" />
endsnippet

snippet cl "console.log"
console.log(${0});
endsnippet
snippet cd "console.debug"
console.debug(${0});
endsnippet
snippet ce "console.error"
console.error(${0});
endsnippet
snippet cw "console.warn"
console.warn(${0});
endsnippet
snippet ci "console.info"
console.info(${0});
endsnippet
snippet ct "console.trace"
console.trace(${0:label});
endsnippet

snippet i_ "import lodash"
import _ from "lodash";
endsnippet

snippet suspense "suspense tags"
<Suspense>
	<template #default>
		<div />
	</template>
	<template #fallback>
		<div />
	</template>
</Suspense>
endsnippet
