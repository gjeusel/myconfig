# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, ... }:

{
  imports =
    [ <nixpkgs/nixos/modules/installer/scan/not-detected.nix>
    ];

# Boot conf
  boot={

    # Kernel modules choices :
    kernelModules = [
      "fbcon" # framebuffer console supports high resolutions, varying font types, display rotation, primitive multihead, etc
      "i915" # linux kernel driver for intel chips
      "acpi-cpufreq" # CPU frequency scaling infrastructure
      "cpufreq-ondemand" # Normally loaded automatically with acpi-cpufreq
      "coretemp" # driver that permits reading tje Digital Temperature Sensor of intel CPUs
      "battery" # driver for battery informations
      "xhci-hcd" # USB 3.0 supports
      "uvcvideo" # driver for Webcam, Video grabber devices
      "snd-hda-intel power_save=5 index=1,0" # audio driver
      "snd-pcm"
      "kvm-intel"
      "aesni-intel"
      "crc32c-intel"
      "intel-powerclamp"
      "ath9k"
      "asus-nb-wmi"
    ];
    extraModulePackages = [ config.boot.kernelPackages.bbswitch ];
    initrd = {
      kernelModules = [
        "fbcon"
        "i915"
        "ehci_pci"
        "ahci"
        "usbhid"
        "sd_mod"
      ];
      network.enable = true;
    };
  };

  ## Change linux kernel default :
  #boot.kernelPackages = pkgs.linuxPackages_4_9;
  /*boot.kernelPackages = pkgs.linuxPackages_latest;*/

  # Use the gummiboot efi boot loader.
  boot.loader.systemd-boot.enable = true;
  #boot.loader.gummiboot.timeout=null; # To boot automatically on the current generation
  boot.loader.efi.canTouchEfiVariables = true;
  boot.loader.grub.enable = false;

  # Clean tmp dir at boot
  boot.cleanTmpDir = true;

  fileSystems."/boot" =
    { device = "/dev/sda1";
      fsType = "vfat";
    };
  fileSystems."/" =
    { device = "/dev/disk/by-uuid/c1e4dac6-244c-4128-aaf6-57cb03530d64";
      fsType = "ext4";
    };
  fileSystems."/run/media/D" =
    { device = "/dev/disk/by-uuid/19990B7D65A3ADFC";
      fsType = "ntfs";
    };


  # Authorize virtualization
  virtualisation.virtualbox.host.enable = true;

  # Pad config
  services.xserver.synaptics.enable = true;
  services.xserver.synaptics.twoFingerScroll = true;
  services.xserver.synaptics.horizontalScroll = true;
  services.xserver.synaptics.minSpeed = "0.7";
  services.xserver.synaptics.maxSpeed = "3";
  services.xserver.synaptics.accelFactor = "0.05";
  /*services.xserver.synaptics.additionalOptions = ''*/
  /*  Option "ClickFinger1" "1"*/
  /*  Option "ClickFinger2" "0"*/
  /*  Option "ClickFinger3" "0"*/
  /*  Option "TapButton1" "1"*/
  /*  Option "TapButton2" "0"*/
  /*  Option "TapButton3" "0"*/
  /*  Option "VertTwoFingerScroll" "0"*/
  /*  Option "HorizTwoFingerScroll" "0"*/
  /*  Option "GrabEventDevice" "0"*/
  /*'';*/

  /*services.xserver.libinput.enable = true;*/

  # Drivers :
  services.xserver.videoDrivers = ["intel" "i965"];

  # Graphic drivers
  hardware.bumblebee.enable = true;
  hardware.bumblebee.driver = "nvidia";
  hardware.bumblebee.group = "users";
  hardware.bumblebee.connectDisplay = true;
  #hardware.opengl.driSupport = true; # Whether to enable accelerated OpenGL rendering through the Direct Rendering Interface (DRI)
  #hardware.opengl.driSupport32Bit = true;

# Enable pulseaudio for audio
  hardware.pulseaudio.enable = true;
  hardware.pulseaudio.support32Bit = true;
  #hardware.opengl.extraPackages = [ pkgs.vaapiIntel  ];

  ## compatibility bluetooth & pulseaudio :
  #hardware.pulseaudio.package = pkgs.pulseaudioFull; # to get pulseaudio bluetooth
  #nixpkgs.config = {
  #  packageOverrides = pkgs: {
  #  bluez = pkgs.bluez5;
  #  };
  #};
  #hardware.bluetooth.enable = true;

  #powerManagement.scsiLinkPolicy = null; # SCSI : Small Computer System Interface (sd card lecteur / DVD / ...)

  fonts = {
        # Store all the fonts in one place
        enableFontDir = true;
        # Enable default fonts
        enableDefaultFonts = true;
        # Enable Microsoft Core Fonts
        enableCoreFonts = true;
        # Whether to add the fonts provided by Ghostscript
        enableGhostscriptFonts = true;

        # Add more fonts
        fonts = with pkgs; [
            hack-font
            noto-fonts
            noto-fonts-emoji
            dejavu_fonts
            ubuntu_font_family
            corefonts # Microsoft free fonts
            powerline-fonts
        ];

  };

  swapDevices = [ ];

  nix.maxJobs = 4;
}
